<UserControl x:Class="autoplaysharp.App.UI.Tasks.TaskView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:app="clr-namespace:autoplaysharp.App"
             xmlns:allianceBattle="clr-namespace:autoplaysharp.App.UI.Tasks.AllianceBattle"
             xmlns:epicQuest="clr-namespace:autoplaysharp.App.UI.Tasks.EpicQuest"
             xmlns:t="clr-namespace:autoplaysharp.App.UI.Tasks.TimelineBattle"
             xmlns:dimensionMissions="clr-namespace:autoplaysharp.App.UI.Tasks.DimensionMissions"
             xmlns:legendaryBattle="clr-namespace:autoplaysharp.App.UI.Tasks.LegendaryBattle"
             mc:Ignorable="d" 
             d:DesignHeight="250" d:DesignWidth="800"
             DataContext="{Binding Path=TasksViewModel, Source={StaticResource Locator}}"
             IsEnabled="{Binding IsEnabled}">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <GroupBox Grid.Column="0" Header="Routine">
            <Grid Margin="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Orientation="Horizontal">
                    <Button Margin="3" Command="{Binding Path=AddAllToQueue}">
                        <TextBlock Margin="3">Run Routine</TextBlock>
                    </Button>
                    <Button Margin="3" Command="{Binding Path=CancelCommand}">
                        <TextBlock Margin="3">Cancel</TextBlock>
                    </Button>
                    <Button Margin="3" Width="15" x:Name="AddButton">
                        +
                        <Button.ContextMenu>
                            <ContextMenu ItemsSource="{Binding Tasks}">
                                <ContextMenu.ItemContainerStyle>
                                    <Style TargetType="MenuItem">
                                        <Setter Property="Command" 
                                                Value="{Binding Path=DataContext.Add, RelativeSource={RelativeSource AncestorType=Button}}" />
                                        <Setter Property="CommandParameter" Value="{Binding}"/>
                                    </Style>
                                </ContextMenu.ItemContainerStyle>
                                <ContextMenu.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}"/>
                                    </DataTemplate>
                                </ContextMenu.ItemTemplate>
                            </ContextMenu>
                        </Button.ContextMenu>
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click">
                                <b:ChangePropertyAction TargetObject="{Binding ContextMenu, ElementName=AddButton}" PropertyName="PlacementTarget" Value="{Binding ElementName=AddButton, Mode=OneWay}"/>
                                <b:ChangePropertyAction TargetObject="{Binding ContextMenu, ElementName=AddButton}" PropertyName="IsOpen" Value="True"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </Button>
               
                    <Button Margin="3" Width="15" Command="{Binding Path=Remove}"
                            CommandParameter="{Binding Path=SelectedItem, ElementName=RoutineListView}">-</Button>
                </StackPanel>
                <CheckBox Grid.Row="1" IsChecked="{Binding CheckAll}">Select all</CheckBox>
                <ListBox Grid.Row="2" x:Name="RoutineListView"
                              ItemsSource="{Binding RoutineItems}"
                              dd:DragDrop.UseDefaultDragAdorner="True"
                              dd:DragDrop.UseDefaultEffectDataTemplate="True"
                              SelectionMode="Extended">
                    <ListBox.Style>
                        <Style TargetType="ListBox">
                            <Setter Property="dd:DragDrop.IsDragSource" Value="False"/>
                            <Setter Property="dd:DragDrop.IsDropTarget" Value="False"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ActiveTask}" Value="{x:Null}">
                                    <Setter Property="dd:DragDrop.IsDragSource" Value="True"/>
                                    <Setter Property="dd:DragDrop.IsDropTarget" Value="True"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.Style>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsActive}" Value="True">
                                    <DataTrigger.Setters>
                                        <Setter Property="Background" Value="LightGreen"/>
                                    </DataTrigger.Setters>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <DockPanel Margin="3" HorizontalAlignment="Stretch">
                                <TextBlock DockPanel.Dock="Left">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=DataContext.ActiveTask, ElementName=RoutineListView}"
                                                                 Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                        &#9776;
                                </TextBlock>
                                <CheckBox DockPanel.Dock="Left" 
                                          Margin="5,0,0,0" 
                                          Content="{Binding Name}"
                                          IsChecked="{Binding IsChecked}"/>
                                <ToggleButton IsEnabled="{Binding Path=DataContext.CanChangeSettings, ElementName=RoutineListView}" Name="SettingsButton" Margin="5,0,0,0">
                                    <TextBlock>&#x1F527;</TextBlock>
                                </ToggleButton>
                                <Popup AllowsTransparency="True" IsOpen="{Binding IsChecked, ElementName=SettingsButton}" StaysOpen="False">
                                    <Popup.Resources>
                                        <ResourceDictionary>
                                            <DataTemplate x:Key="AllianceBattleTemplate">
                                                <allianceBattle:AllianceBattleSettings/>
                                            </DataTemplate>
                                            <DataTemplate x:Key="TimelineBattleTemplate">
                                                <t:TimelineBattleSettings/>
                                            </DataTemplate>
                                            <DataTemplate x:Key="DimensionMissionTemplate">
                                                <dimensionMissions:DimensionMissionSettings/>
                                            </DataTemplate>
                                            <DataTemplate x:Key="PlaceHolder">
                                                <TextBlock>No settings available.</TextBlock>
                                            </DataTemplate>
                                            <DataTemplate x:Key="LegendaryBattleTemplate">
                                                <legendaryBattle:LegendaryBattleSettingsView/>
                                            </DataTemplate>
                                            <DataTemplate x:Key="EpicQuestTemplate">
                                                <epicQuest:EpicQuestSettings />
                                            </DataTemplate>
                                            <app:SettingsTemplateSelector x:Key="SettingsTemplateSelector"
                                                                          AllianceBattleTemplate="{StaticResource AllianceBattleTemplate}"
                                                                          TimelineBattleTemplate="{StaticResource TimelineBattleTemplate}"
                                                                          DimensionMissionTemplate="{StaticResource DimensionMissionTemplate}"
                                                                          LegendaryBattleTemplate="{StaticResource LegendaryBattleTemplate}"
                                                                          EpicQuestTemplate="{StaticResource EpicQuestTemplate}"
                                                                          PlaceHolderTemplate="{StaticResource PlaceHolder}"/>
                                        </ResourceDictionary>
                                    </Popup.Resources>
                                    <Border BorderBrush="Gray" BorderThickness="1" Background="White" CornerRadius="4">
                                        <GroupBox Header="{Binding Name}" Margin="5">
                                            <ContentControl 
                                                Margin="5"
                                                Content="{Binding}" 
                                                ContentTemplateSelector="{StaticResource SettingsTemplateSelector}">
                                            </ContentControl>
                                        </GroupBox>
                                    </Border>
                                </Popup>
                                <Button Margin="5,0,0,0" Command="{Binding Path=DataContext.Remove, ElementName=RoutineListView}"
                                        CommandParameter="{Binding}">
                                    <TextBlock>&#x1f5d1;</TextBlock>
                                </Button>
                            </DockPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </GroupBox>
        <!--<GroupBox Grid.Column="1" Header="Single Tasks">
            <StackPanel>
                <ToggleButton Margin="3"
                        Command="{Binding ExecuteSingleTaskCommand}"
                        CommandParameter="{x:Type Tasks:AutoFight}">
                    AutoFight
                </ToggleButton>
            </StackPanel>
        </GroupBox>-->
    </Grid>
</UserControl>
